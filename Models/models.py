sqldb.define_table('request',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('admrequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('alurequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('fcurequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('fundcode', label="Fund/Orgn Code"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('fborequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('farequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('hrrequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('ittsrequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('regrequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('sarequest',
                   Field('requesttype', label="Type"),
                   Field('first', label="First"),
                   Field('middle', label="MI"),
                   Field('last', label="Last"),
                   Field('dept', label="Department"),
                   Field('banner', label="Banner ID"),
                   Field('phone', label="Office Phone"),
                   Field('banneruser', label="Banner Username"),
                   Field('effectivedate', label="Effective Date"),
                   Field('manageruser', label="Manager Username"),
                   Field('requestedby', label="Requested By"),
                   Field('requestdate', 'datetime', label="Request Date", default=request.now),
                   Field('securityclass', label="Security Class"),
                   Field('managerapprove', 'boolean', label="Manager Approval"),
                   Field('managerdate', 'datetime', label="Manager Approval Date", compute=lambda row: request.now if row.managerapprove==True else None),
                   Field('finalapprove', 'boolean', label="Final Approval"),
                   Field('finaldate', 'datetime', label="Final Approval Date", compute=lambda row: request.now if row.finalapprove==True else None),
                   Field('approver', label="Approver", compute=lambda row: auth.user.username if row.finalapprove != None else None),
                   Field('managercomment', label="Manager Comment"),
                   Field('approvercomment', label="Approver Comment"), plural="Requests")

sqldb.define_table('securityclass',
                   Field('dept', label="Department", requires=IS_IN_SET(["Admissions", "Alumni / Advancement", "Finance Campus Users", "Finance for Business Office", "Financial Aid", "Human Resources / Payroll", "ITTS", "Registrar", "Student Affairs"])),
                   Field('secclass', label="Security Class"),
                   Field('active', 'boolean', label="Active"),
                   Field('assocforms', label="Associated Forms"),
                   Field('assocroles', label="Associated Roles"),
                   Field('propername', label="Proper Name"), plural="Security Classes")